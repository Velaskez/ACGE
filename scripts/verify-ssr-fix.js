#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç V√©rification de la correction SSR...\n');

// V√©rifier que l'ancien fichier n'existe plus
const oldFile = path.join(process.cwd(), 'src/components/documents/document-viewer.tsx');
if (fs.existsSync(oldFile)) {
  console.log('‚ùå L\'ancien fichier document-viewer.tsx existe encore');
  process.exit(1);
} else {
  console.log('‚úÖ L\'ancien fichier document-viewer.tsx supprim√©');
}

// V√©rifier que le fichier s√©curis√© existe
const safeFile = path.join(process.cwd(), 'src/components/documents/document-viewer-safe.tsx');
if (fs.existsSync(safeFile)) {
  console.log('‚úÖ Le fichier document-viewer-safe.tsx existe');
} else {
  console.log('‚ùå Le fichier document-viewer-safe.tsx manquant');
  process.exit(1);
}

// V√©rifier l'export dans index.ts
const indexFile = path.join(process.cwd(), 'src/components/documents/index.ts');
const indexContent = fs.readFileSync(indexFile, 'utf8');

if (indexContent.includes('DocumentViewerSafe as DocumentViewer')) {
  console.log('‚úÖ Export DocumentViewerSafe as DocumentViewer trouv√©');
} else {
  console.log('‚ùå Export DocumentViewerSafe as DocumentViewer manquant');
  process.exit(1);
}

if (indexContent.includes("from './document-viewer'")) {
  console.log('‚ùå Import de l\'ancien document-viewer trouv√©');
  process.exit(1);
} else {
  console.log('‚úÖ Aucun import de l\'ancien document-viewer');
}

// V√©rifier les imports dans les autres fichiers
const filesToCheck = [
  'src/components/documents/advanced-document-viewer.tsx',
  'src/components/documents/ultimate-document-viewer.tsx',
  'src/components/documents/document-preview-modal-migrated.tsx',
  'src/components/documents/unified-document-viewer.tsx'
];

let allGood = true;
filesToCheck.forEach(filePath => {
  const fullPath = path.join(process.cwd(), filePath);
  if (fs.existsSync(fullPath)) {
    const content = fs.readFileSync(fullPath, 'utf8');
    if (content.includes("from './document-viewer'")) {
      console.log(`‚ùå ${filePath} importe encore l'ancien document-viewer`);
      allGood = false;
    } else if (content.includes("from './index'")) {
      console.log(`‚úÖ ${filePath} utilise l'import centralis√©`);
    }
  }
});

if (allGood) {
  console.log('\nüéâ Toutes les v√©rifications sont pass√©es !');
  console.log('‚úÖ La correction SSR est en place');
  console.log('‚úÖ Tous les imports utilisent la version s√©curis√©e');
  console.log('‚úÖ L\'ancien fichier probl√©matique est supprim√©');
} else {
  console.log('\n‚ùå Certaines v√©rifications ont √©chou√©');
  process.exit(1);
}
