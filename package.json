{
  "name": "agence-comptable-grandes-ecoles",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:deploy": "prisma migrate deploy",
    "db:migrate-prod": "tsx scripts/migrate-production.ts",
    "postinstall": "prisma generate",
    "db:studio": "prisma studio",
    "create-admin": "tsx scripts/create-admin.ts",
    "setup:postgres": "tsx scripts/setup-postgres.ts",
    "setup:postgres-local": "tsx scripts/setup-postgres-local.ts",
    "create-database": "tsx scripts/create-database.ts",
    "setup:dev": "prisma generate --schema=./prisma/schema.sqlite.prisma && prisma db push --schema=./prisma/schema.sqlite.prisma && tsx scripts/setup-dev-db.ts",
    "seed:test": "tsx scripts/seed-test-data.ts",
    "check:data": "tsx scripts/check-data.ts",
    "seed:admin": "tsx scripts/add-test-data-admin.ts",
    "clean:fake": "tsx scripts/clean-fake-data.ts",
    "test:api": "tsx scripts/test-api-data.ts",
    "migrate:versioning": "tsx scripts/migrate-to-versioning.ts",
    "backup:documents": "tsx scripts/safe-versioning-migration.ts",
    "restore:documents": "tsx scripts/restore-documents.ts",
    "check:versioning": "tsx scripts/check-versioning-data.ts",
    "test:versioning": "tsx scripts/test-versioning-apis.ts",
    "test:upload": "tsx scripts/test-upload-versioning.ts",
    "test:complete": "tsx scripts/test-complete-versioning.ts",
    "test:apis": "tsx scripts/test-apis-after-fix.ts",
    "generate:token": "tsx scripts/generate-test-token.ts",
    "test:ui": "tsx scripts/test-ui-fixes.ts",
    "test:delete": "tsx scripts/test-delete-document.ts",
    "test:delete-api": "tsx scripts/test-delete-api.ts",
    "dev:clean": "rm -f prisma/dev.db && rm -f .env.local && npm run setup:dev",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f postgres",
    "deploy:prod": "tsx scripts/deploy-production.ts",
    "pre-deploy": "tsx scripts/pre-deploy-check.ts",
    "setup:production": "tsx scripts/setup-production.ts",
    "build:prod": "NODE_ENV=production next build",
    "start:prod": "NODE_ENV=production next start -p $PORT",
    "postbuild": "npm run db:generate",
    "setup:prisma-prod": "tsx scripts/setup-prisma-production.ts",
    "prisma:manage": "tsx scripts/prisma-db-manager.ts",
    "prisma:migrate": "tsx scripts/prisma-migration-manager.ts",
    "backup:current": "tsx scripts/backup-current-data.ts",
    "restore:backup": "tsx scripts/restore-backup-data.ts",
    "setup:platform": "tsx scripts/setup-prisma-platform.ts",
    "migrate:to-platform": "tsx scripts/migrate-to-platform.ts",
    "migrate:new-db": "tsx scripts/migrate-to-new-db.ts",
    "setup:lws": "tsx scripts/setup-lws.ts",
    "fix:api-export": "tsx scripts/fix-api-routes-for-export.ts",
    "fix:dynamic-routes": "tsx scripts/fix-dynamic-routes-for-export.ts",
    "test:identification": "tsx scripts/test-identification.ts",
    "test:db": "tsx scripts/test-db-connection.ts",
    "setup:sqlite": "tsx scripts/setup-sqlite-local.ts",
    "create:admin-sqlite": "tsx scripts/create-admin-sqlite.ts",
    "build:lws": "npm run fix:api-export && npm run fix:dynamic-routes && tsx scripts/build-lws.ts",
    "prepare:lws": "tsx scripts/prepare-lws-upload.ts",
    "deploy:lws": "npm run setup:lws && npm run build:lws && npm run prepare:lws",
    "build:lws-simple": "tsx scripts/build-lws.ts",
    "build:lws-static": "tsx scripts/build-lws-simple.ts",
    "build:lws-ultra": "tsx scripts/build-lws-ultra-simple.ts",
    "setup:vercel": "tsx scripts/setup-vercel.ts"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^1.0.0",
    "@hookform/resolvers": "^5.2.1",
    "@prisma/client": "^6.14.0",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/supabase-js": "^2.55.0",
    "@types/jsonwebtoken": "^9.0.10",
    "basic-ftp": "^5.0.5",
    "bcryptjs": "^2.4.3",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.1",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.539.0",
    "mysql2": "^3.9.2",
    "next": "15.4.6",
    "next-auth": "^5.0.0-beta.0",
    "next-themes": "^0.4.6",
    "react": "^18",
    "react-dom": "^18",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.62.0",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^2.0.0",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie": "^0.6.0",
    "@types/ms": "^2.1.0",
    "@types/node": "^20.19.10",
    "@types/pg": "^8.15.5",
    "@types/prop-types": "^15.7.15",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "eslint": "^8",
    "eslint-config-next": "15.4.6",
    "prisma": "^6.14.0",
    "tailwindcss": "^4.0.0",
    "tsx": "^4.0.0",
    "tw-animate-css": "^1.3.6",
    "typescript": "^5"
  }
}
