import { PrismaClient } from '@prisma/client'
import * as dotenv from 'dotenv'
import { readFileSync, existsSync } from 'fs'
import { join } from 'path'

// Charger les variables d'environnement depuis .env.local
const envPath = join(process.cwd(), '.env.local')
if (existsSync(envPath)) {
  const envConfig = dotenv.parse(readFileSync(envPath, 'utf8'))
  Object.assign(process.env, envConfig)
}

const prisma = new PrismaClient()

async function findAdminInfo() {
  try {
    console.log('üîç Recherche des informations administrateur...')
    
    // R√©cup√©rer tous les utilisateurs avec r√¥le ADMIN
    const adminUsers = await prisma.user.findMany({
      where: {
        role: 'ADMIN'
      },
      select: {
        id: true,
        email: true,
        name: true,
        role: true,
        createdAt: true
      }
    })
    
    console.log(`üìä Nombre d'administrateurs trouv√©s : ${adminUsers.length}`)
    
    if (adminUsers.length > 0) {
      console.log('\nüëë Administrateurs :')
      adminUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.email}`)
        console.log(`      - ID: ${user.id}`)
        console.log(`      - Nom: ${user.name || 'Non d√©fini'}`)
        console.log(`      - R√¥le: ${user.role}`)
        console.log(`      - Cr√©√© le: ${user.createdAt.toLocaleDateString()}`)
        console.log('')
      })
    }
    
    // R√©cup√©rer tous les utilisateurs pour voir s'il y en a d'autres
    const allUsers = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        name: true,
        role: true,
        createdAt: true
      }
    })
    
    console.log(`üìã Tous les utilisateurs (${allUsers.length}) :`)
    allUsers.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.email} (${user.role})`)
    })
    
    console.log('\nüí° Pour vous connecter :')
    console.log('   1. Allez sur https://acge-gabon.com')
    console.log('   2. Utilisez l\'email de l\'administrateur trouv√© ci-dessus')
    console.log('   3. Si vous ne connaissez pas le mot de passe, vous devrez le r√©initialiser')
    
  } catch (error: any) {
    console.error('‚ùå Erreur :', error.message)
    
    if (error.code === 'P1001') {
      console.log('\nüí° Le serveur MySQL n\'est pas accessible depuis votre machine locale.')
      console.log('   Cela est normal car LWS limite l\'acc√®s aux IPs autoris√©es.')
      console.log('   Testez la connexion depuis l\'application d√©ploy√©e sur Vercel.')
    }
  } finally {
    await prisma.$disconnect()
  }
}

findAdminInfo()
