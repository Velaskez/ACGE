// Script pour cr√©er automatiquement le fichier .env.local
import fs from 'fs'
import path from 'path'

async function setupEnvLocal() {
  console.log('üîß Configuration du fichier .env.local\n')
  
  const envContent = `# Configuration ACGE - Environnement de d√©veloppement
# Base de donn√©es PostgreSQL Docker
DATABASE_URL="postgresql://acge_user:acge_password_dev@localhost:5432/acge_database"

# NextAuth.js - Authentication
NEXTAUTH_SECRET="acge-dev-secret-key-change-in-production-2024"
NEXTAUTH_URL="http://localhost:3000"

# API publique
NEXT_PUBLIC_API_URL="http://localhost:3000"

# Optionnel : Mode debug Prisma (d√©commentez si n√©cessaire)
# DEBUG="prisma:query"
`

  const envPath = path.join(process.cwd(), '.env.local')
  
  try {
    // V√©rifier si le fichier existe d√©j√†
    if (fs.existsSync(envPath)) {
      console.log('‚ö†Ô∏è  Le fichier .env.local existe d√©j√†')
      console.log('üìã Contenu actuel :')
      console.log(fs.readFileSync(envPath, 'utf8'))
      console.log('\nüîÑ Mise √† jour du fichier...')
    } else {
      console.log('üìù Cr√©ation du fichier .env.local...')
    }
    
    fs.writeFileSync(envPath, envContent, 'utf8')
    console.log('‚úÖ Fichier .env.local cr√©√© avec succ√®s !')
    console.log(`üìç Emplacement : ${envPath}`)
    
    console.log('\nüìã Variables configur√©es :')
    console.log('  ‚úÖ DATABASE_URL (PostgreSQL Docker)')
    console.log('  ‚úÖ NEXTAUTH_SECRET (Authentification)')
    console.log('  ‚úÖ NEXTAUTH_URL (URL de d√©veloppement)')
    console.log('  ‚úÖ NEXT_PUBLIC_API_URL (API publique)')
    
    console.log('\nüîç Test de la connexion √† la base de donn√©es...')
    
    // Test rapide de la connexion
    const { execSync } = await import('child_process')
    try {
      execSync('npx prisma db push --accept-data-loss', { 
        stdio: 'pipe',
        env: { ...process.env, DATABASE_URL: "postgresql://acge_user:acge_password_dev@localhost:5432/acge_database" }
      })
      console.log('‚úÖ Connexion √† la base de donn√©es OK !')
    } catch (error) {
      console.log('‚ö†Ô∏è  Probl√®me de connexion √† la base de donn√©es')
      console.log('üí° Assurez-vous que Docker est d√©marr√© : docker-compose up -d')
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation du fichier .env.local:', error)
    process.exit(1)
  }
}

setupEnvLocal().catch(console.error)
