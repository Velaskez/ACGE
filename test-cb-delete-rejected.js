/**
 * üß™ TEST SUPPRESSION DOSSIERS REJET√âS CB - ACGE
 * 
 * Script de test pour v√©rifier la fonctionnalit√© de suppression des dossiers rejet√©s
 * par le Contr√¥leur Budg√©taire
 */

const testCBDeleteRejected = async () => {
  console.log('üß™ D√âBUT DU TEST - Suppression dossiers rejet√©s CB')
  console.log('=' .repeat(60))

  try {
    // 1. R√©cup√©rer les dossiers rejet√©s existants
    console.log('\nüìä 1. R√©cup√©ration des dossiers rejet√©s CB...')
    const rejectedResponse = await fetch('http://localhost:3000/api/dossiers/cb-rejected', {
      credentials: 'include'
    })

    if (!rejectedResponse.ok) {
      throw new Error(`Erreur r√©cup√©ration dossiers rejet√©s: ${rejectedResponse.status}`)
    }

    const rejectedData = await rejectedResponse.json()
    console.log(`‚úÖ ${rejectedData.dossiers?.length || 0} dossiers rejet√©s trouv√©s`)

    if (rejectedData.dossiers && rejectedData.dossiers.length > 0) {
      const firstDossier = rejectedData.dossiers[0]
      console.log(`üìã Premier dossier rejet√©: ${firstDossier.numeroDossier}`)
      console.log(`   - Objet: ${firstDossier.objetOperation}`)
      console.log(`   - B√©n√©ficiaire: ${firstDossier.beneficiaire}`)
      console.log(`   - Statut: ${firstDossier.statut}`)

      // 2. Tester la suppression d'un dossier rejet√©
      console.log('\nüóëÔ∏è 2. Test de suppression du premier dossier rejet√©...')
      const deleteResponse = await fetch(`http://localhost:3000/api/dossiers/cb-rejected/${firstDossier.id}/delete`, {
        method: 'DELETE',
        credentials: 'include'
      })

      if (deleteResponse.ok) {
        const deleteData = await deleteResponse.json()
        console.log('‚úÖ Suppression r√©ussie:', deleteData.message)
        console.log('üìä Dossier supprim√©:', deleteData.deletedDossier)
      } else {
        const deleteError = await deleteResponse.json()
        console.log('‚ùå Erreur suppression:', deleteError.error)
      }
    } else {
      console.log('‚ÑπÔ∏è Aucun dossier rejet√© trouv√© pour le test')
    }

    // 3. V√©rifier que le dossier a bien √©t√© supprim√©
    console.log('\nüîç 3. V√©rification de la suppression...')
    const verifyResponse = await fetch('http://localhost:3000/api/dossiers/cb-rejected', {
      credentials: 'include'
    })

    if (verifyResponse.ok) {
      const verifyData = await verifyResponse.json()
      console.log(`‚úÖ ${verifyData.dossiers?.length || 0} dossiers rejet√©s restants`)
    }

    console.log('\nüéâ TEST TERMIN√â - Suppression dossiers rejet√©s CB')
    console.log('=' .repeat(60))

  } catch (error) {
    console.error('‚ùå ERREUR LORS DU TEST:', error.message)
    console.log('=' .repeat(60))
  }
}

// Ex√©cuter le test si le script est appel√© directement
if (typeof window === 'undefined') {
  testCBDeleteRejected()
}

module.exports = { testCBDeleteRejected }
